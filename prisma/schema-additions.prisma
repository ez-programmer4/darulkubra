// Additional models for enhanced teacher payment system
// Add these to your main schema.prisma file

model TeacherPayment {
  id          String   @id @default(cuid())
  teacherId   String
  period      String   // Format: YYYY-MM
  status      String   @default("Unpaid") // "Paid" | "Unpaid"
  totalSalary Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([teacherId, period])
  @@map("teacher_payments")
}

model PackageDeduction {
  id                  Int      @id @default(autoincrement())
  packageName         String   @unique
  latenessBaseAmount  Float    @default(30)
  absenceBaseAmount   Float    @default(25)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@map("package_deductions")
}

model PaymentTransaction {
  id            String   @id @default(cuid())
  teacherId     String
  amount        Float
  period        String
  transactionId String   @unique
  status        String   @default("pending") // "pending" | "completed" | "failed"
  processedAt   DateTime @default(now())
  createdAt     DateTime @default(now())

  @@map("payment_transactions")
}

model ZoomLink {
  id        String   @id @default(cuid())
  teacherId String
  studentId Int
  link      String
  createdAt DateTime @default(now())
  usedAt    DateTime?

  @@map("zoom_links")
}

model LatenessRecord {
  id               String   @id @default(cuid())
  teacherId        String
  studentId        Int?
  classDate        DateTime
  latenessMinutes  Int
  deductionApplied Float
  deductionTier    String
  scheduledTime    DateTime?
  actualStartTime  DateTime?
  createdAt        DateTime @default(now())

  student wpos_wpdatatable_23? @relation(fields: [studentId], references: [wdt_ID])

  @@map("lateness_records")
}

model AbsenceRecord {
  id                String   @id @default(cuid())
  teacherId         String
  classDate         DateTime
  timeSlots         String?  // JSON array of time slots
  deductionApplied  Float
  permitted         Boolean  @default(false)
  reviewedByManager Boolean  @default(false)
  reviewNotes       String?
  packageBreakdown  String?  // JSON array of package-specific calculations
  uniqueTimeSlots   String?  // JSON array of unique time slots affected
  createdAt         DateTime @default(now())

  @@map("absence_records")
}

model BonusRecord {
  id        String   @id @default(cuid())
  teacherId String
  amount    Float
  reason    String
  createdAt DateTime @default(now())

  @@map("bonus_records")
}

model Setting {
  id    Int    @id @default(autoincrement())
  key   String @unique
  value String
  
  @@map("settings")
}